-- MySQL Script generated by MySQL Workbench
-- Wed Jan 26 20:23:28 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`groups`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`groups` (
  `id(pk)` TINYINT(10) NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(100) NULL,
  PRIMARY KEY (`id(pk)`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`genres`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`genres` (
  `id(pk)` TINYINT(10) NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(100) NULL,
  PRIMARY KEY (`id(pk)`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`users` (
  `id(pk)` TINYINT(10) NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(100) NOT NULL,
  `apellido` VARCHAR(100) NOT NULL,
  `dni` VARCHAR(100) NOT NULL,
  `mail` VARCHAR(100) NOT NULL,
  `password` VARCHAR(100) NULL,
  `fecha_registro` DATE NULL,
  `estado` INT NULL,
  `image` VARCHAR(100) NOT NULL,
  `groups_id(pk)` TINYINT(10) NOT NULL,
  `genres_id(pk)` TINYINT(10) NOT NULL,
  PRIMARY KEY (`id(pk)`, `groups_id(pk)`, `genres_id(pk)`),
  UNIQUE INDEX `dni_UNIQUE` (`dni` ASC) ,
  UNIQUE INDEX `mail_UNIQUE` (`mail` ASC) ,
  INDEX `fk_users_groups1_idx` (`groups_id(pk)` ASC) ,
  INDEX `fk_users_genres1_idx` (`genres_id(pk)` ASC) ,
  CONSTRAINT `fk_users_groups1`
    FOREIGN KEY (`groups_id(pk)`)
    REFERENCES `mydb`.`groups` (`id(pk)`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_users_genres1`
    FOREIGN KEY (`genres_id(pk)`)
    REFERENCES `mydb`.`genres` (`id(pk)`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`states`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`states` (
  `id(pk)` TINYINT(10) NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(100) NULL,
  PRIMARY KEY (`id(pk)`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`orders`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`orders` (
  `id(pk)` TINYINT(10) NOT NULL AUTO_INCREMENT,
  `referencia` VARCHAR(100) NULL,
  `total` INT NULL,
  `metodo_pago` VARCHAR(100) NULL,
  `fecha` DATE NULL,
  `users_id(pk)` TINYINT(10) NOT NULL,
  `users_groups_id(pk)` TINYINT(10) NOT NULL,
  `users_genres_id(pk)` TINYINT(10) NOT NULL,
  PRIMARY KEY (`id(pk)`),
  INDEX `fk_orders_users1_idx` (`users_id(pk)` ASC, `users_groups_id(pk)` ASC, `users_genres_id(pk)` ASC) ,
  CONSTRAINT `fk_orders_users1`
    FOREIGN KEY (`users_id(pk)` , `users_groups_id(pk)` , `users_genres_id(pk)`)
    REFERENCES `mydb`.`users` (`id(pk)` , `groups_id(pk)` , `genres_id(pk)`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`products`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`products` (
  `id(pk)` TINYINT(10) NOT NULL AUTO_INCREMENT,
  `sku` VARCHAR(100) NULL,
  `nombre` VARCHAR(100) NULL,
  `descripcion` TEXT NULL,
  `precio` INT NULL,
  `discount` INT NULL,
  `estado` INT NULL,
  PRIMARY KEY (`id(pk)`),
  UNIQUE INDEX `referencia_UNIQUE` (`sku` ASC) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`categories`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`categories` (
  `id(pk)` TINYINT(10) NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(100) NULL,
  `value` VARCHAR(100) NULL,
  PRIMARY KEY (`id(pk)`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`images`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`images` (
  `id(pk)` TINYINT(10) NOT NULL AUTO_INCREMENT,
  `url` VARCHAR(100) NULL,
  `products_id(pk)` TINYINT(10) NOT NULL,
  PRIMARY KEY (`id(pk)`, `products_id(pk)`),
  INDEX `fk_images_products1_idx` (`products_id(pk)` ASC) ,
  CONSTRAINT `fk_images_products1`
    FOREIGN KEY (`products_id(pk)`)
    REFERENCES `mydb`.`products` (`id(pk)`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`orders_status`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`orders_status` (
  `id(pk)` TINYINT(10) NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(100) NULL,
  PRIMARY KEY (`id(pk)`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`adresses`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`adresses` (
  `id(pk)` TINYINT(10) NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(100) NOT NULL,
  `apellido` VARCHAR(100) NOT NULL,
  `direccion` VARCHAR(100) NULL,
  `codigo_postal` VARCHAR(100) NULL,
  `localidad` VARCHAR(100) NULL,
  `telefono` INT NULL,
  `states_id(pk)` TINYINT(10) NOT NULL,
  `users_id(pk)` TINYINT(10) NOT NULL,
  `users_groups_id(pk)` TINYINT(10) NOT NULL,
  `users_genres_id(pk)` TINYINT(10) NOT NULL,
  PRIMARY KEY (`id(pk)`, `states_id(pk)`),
  INDEX `fk_adresses_states1_idx` (`states_id(pk)` ASC) ,
  INDEX `fk_adresses_users1_idx` (`users_id(pk)` ASC, `users_groups_id(pk)` ASC, `users_genres_id(pk)` ASC) ,
  CONSTRAINT `fk_adresses_states1`
    FOREIGN KEY (`states_id(pk)`)
    REFERENCES `mydb`.`states` (`id(pk)`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_adresses_users1`
    FOREIGN KEY (`users_id(pk)` , `users_groups_id(pk)` , `users_genres_id(pk)`)
    REFERENCES `mydb`.`users` (`id(pk)` , `groups_id(pk)` , `genres_id(pk)`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`products_has_categories`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`products_has_categories` (
  `productos_has_categorias_id(pk)` TINYINT(10) NOT NULL AUTO_INCREMENT,
  `products_id(pk)` TINYINT(10) NOT NULL,
  `categories_id(pk)` TINYINT(10) NOT NULL,
  PRIMARY KEY (`productos_has_categorias_id(pk)`, `products_id(pk)`, `categories_id(pk)`),
  INDEX `fk_products_has_categories_products1_idx` (`products_id(pk)` ASC) ,
  INDEX `fk_products_has_categories_categories1_idx` (`categories_id(pk)` ASC) ,
  CONSTRAINT `fk_products_has_categories_products1`
    FOREIGN KEY (`products_id(pk)`)
    REFERENCES `mydb`.`products` (`id(pk)`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_products_has_categories_categories1`
    FOREIGN KEY (`categories_id(pk)`)
    REFERENCES `mydb`.`categories` (`id(pk)`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`orders_has_orders_status`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`orders_has_orders_status` (
  `id(pk)` TINYINT(10) NOT NULL AUTO_INCREMENT,
  `fecha_estado` DATETIME NULL,
  `orders_id(pk)` TINYINT(10) NOT NULL,
  `orders_status_id(pk)` TINYINT(10) NOT NULL,
  PRIMARY KEY (`id(pk)`, `orders_id(pk)`, `orders_status_id(pk)`),
  INDEX `fk_orders_has_orders_status_orders1_idx` (`orders_id(pk)` ASC) ,
  INDEX `fk_orders_has_orders_status_orders_status1_idx` (`orders_status_id(pk)` ASC) ,
  CONSTRAINT `fk_orders_has_orders_status_orders1`
    FOREIGN KEY (`orders_id(pk)`)
    REFERENCES `mydb`.`orders` (`id(pk)`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_orders_has_orders_status_orders_status1`
    FOREIGN KEY (`orders_status_id(pk)`)
    REFERENCES `mydb`.`orders_status` (`id(pk)`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`products_has_orders`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`products_has_orders` (
  `productos_has_pedidos_id(pk)` TINYINT(10) NOT NULL AUTO_INCREMENT,
  `id_pedido(fk)` TINYINT(10) NOT NULL,
  `precio` DECIMAL(2) NULL,
  `cantidad` INT NULL,
  `products_id(pk)` TINYINT(10) NOT NULL,
  PRIMARY KEY (`productos_has_pedidos_id(pk)`),
  INDEX `fk_productos_has_pedidos_pedidos1_idx` (`id_pedido(fk)` ASC) ,
  INDEX `fk_products_has_orders_products1_idx` (`products_id(pk)` ASC) ,
  CONSTRAINT `fk_productos_has_pedidos_pedidos1`
    FOREIGN KEY (`id_pedido(fk)`)
    REFERENCES `mydb`.`orders` (`id(pk)`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_products_has_orders_products1`
    FOREIGN KEY (`products_id(pk)`)
    REFERENCES `mydb`.`products` (`id(pk)`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
